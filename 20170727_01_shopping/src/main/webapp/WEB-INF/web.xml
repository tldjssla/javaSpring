<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<!-- Dispatcher Servlet이 꼭 하나여야 하는 것은 아니다.
	규모가 커지다보면 하나의 설정파일로 만들기가 힘들다.
	그러면 Dispatcher Servlet 설정부분 (<servlet>, <servlet-mapping>) 태그를 하나 더 만들면 된다.
	즉 url에 따라서 다른 설정 파일로 보낼 수 있다.
	(설정 파일이 분리되면 서블릿도 분리된다. 그럴 때 밑에 추가해주어야 한다는 것)
	-> 그래도 Dispatcher 서블릿이 처리한다는 것은 똑같다.
	이 때, 설정 파일이 여러 개일 때 공통 부분이 있으면 그걸 따로 뺀다.
	그 걸 application Contexnt 에서 한다.
	위의 context-param 태그를 없애면, application Context를 부르고,
	위에 context-param 태그가 있으면 걔를 부른다.
	즉 공통 부분을 처리하는 애를 먼저 로딩시키고, (대부분 db data source와 관련된 부분이 들어간다)
	그 다음 밑의 servlet 태그의 정보들을 로딩시킨다.
	sts가 지원해주는 구조가 이렇다.
	이전에는 같은 경로에 넣고도 했다. (교재에는 그렇게 되어 있다.)
	지금은 sts가 생성해주는 폴더 구조를 보면 application Context 대신에 root-context.xml을 쓰도록
	만들어 놓았다.

	 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/shopping-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	
	<!-- 다른 설정 파일이 있는 경우 예시 -->
	<!-- <servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/app-servlet2.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/a.html</url-pattern>
	</servlet-mapping> -->

</web-app>
